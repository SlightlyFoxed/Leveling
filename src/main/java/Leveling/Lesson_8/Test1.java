package Leveling.Lesson_8;

public class Test1 {//NON-ACCESS MODIFIER
    public final int a = 10;//final переменная является read only. это значит что использовать переменную возможно, но изменять её нельзя
    // public final int a; //эта строка вызовет ошибку, так как константа не будет определена.У final переменных НЕТ дефолтного значения
    //Если используется константа, то значит мы изначально точно знаем ее значение
    public final int b;//Существует способ, когда можно не присваивать значение константе сразу, но только в том случае, если в каждом последующем конструкторе будет
    // использована эта переменная(если она не static) и ей будет присвоено значение, причем, не обязательно одинаковое
    Test1(){
        b = 20;
    }
    Test1(boolean c){
        b = 10;
    }
    public void abc (final short s) {// так же можно применить final к параметру. это означает что в методе уже будет невозможно изменить его значение как либо, например s++
        final byte c;//Только у локальных переменных с модификатором final можно придавать ей значение не сразу.Но это необходимо будет сделать, так как дефолтного значения нет
        c = 10;
        //s++
        System.out.println(s + c);
    }


    public static void main(String[] args) {
        Test1 t = new Test1();
        //t.a = t.a *2;
        System.out.println(t.a);
    }
}
