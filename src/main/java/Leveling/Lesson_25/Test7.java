package Leveling.Lesson_25;

public class Test7 {
    public static void main(String[] args) {
//Narrowing(сужение) without casting происходит если выполняются 3 условия:
//Если int кастится в byte,short,или char
//Если значение int - это константа
//Если значение int помещается в соответствующий тип данных
        byte b = 10;
        int a = b;//widening(расширение) это Upcasting для примитивных типов данных
        System.out.println(7);//цифра 7 по умолчанию типа данных int
        byte b1 = 3;//Происходит narrowing, переменная _b1_ типа данных byte принимает значение 3 типа данных int. 3 в этом случае значение является константой
        final int i1 = 2;
        byte b2 = i1;//значение i1 это не константа до тех пор, пока не будет указано что она final
        int i2 = 4;
        byte b3 = (byte) i2;//Если значение переменной i2 не константа, то без кастинга не получится сделать narrowing
        long l1 = 3;
        int i3 = (int)l1;//С типом данных long без кастинга не получится сделать narrowing, даже если переменная станет константой
        char c10 = (char)-8;//С помощью кастинга можно придать отрицательное значение char, но в выводе будет значение положительное и высчитанное другим методом
        System.out.println(c10);
        int i12 = (int)3.14;
        System.out.println(i12);//В этом случае будет показана только целая часть, дробная же отсеется

        //Numeric promotion - это конвертация меньшего численного типа данных в больший
        //Numeric promotion происходит в следующих случаях:
        //Если имеются 2 значения разных типов данных, Java автоматически конвертирует меньший числовой тип данных в больший
        //Если одно из значений - это целое число, а другое дробное, Java автоматически конвертирует целочисленный тип данных в дробный,
        // так как любой дробный тип данных больше чем целочисленный
        //Если значения типов данных byte, short, и char участвуют в арифметических операциях, то они перед этим конвертируются в тип данных int,
        // даже если в данных арифметических операциях значение типа данных int не участвует.
        // Исключение: унарные операторы. Использование ++ к типу данных byte не конвертирует результат оператора в int
        //После применения вышеуказанных 3-х правил, когда все операнды стали одного типа данных, результирующее значение,
        // которое получается после срабатывания всех операторов будет такого же типа данных, что и тип данных операнд
        int i4 = 5;
        long l2 = 10;
        i4 = (int)(i4*l2);//Такое выражение возможно только с кастингом int
        i4*=l2;//Здесь кастинг происходит автоматически
        System.out.println(i4+ l2);//Сначала java кастит i4 типа int в long, затем прибавит его к l2 типа long
        float f = 3.14f;
        int i5 = 10;
        System.out.println(f + i5);
    }
}

